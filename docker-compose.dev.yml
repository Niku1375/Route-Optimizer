# Development Database Services
# Run: docker-compose -f docker-compose.dev.yml up -d

version: '3.8'

services:
  postgres-dev:
    image: postgres:14
    container_name: logistics-postgres-dev
    environment:
      POSTGRES_DB: logistics_routing_dev
      POSTGRES_USER: logistics_user
      POSTGRES_PASSWORD: dev_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5432:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U logistics_user -d logistics_routing_dev"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis-dev:
    image: redis:7-alpine
    container_name: logistics-redis-dev
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Optional: Database Admin Interface
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: logistics-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@logistics.local
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - "8080:80"
    depends_on:
      - postgres-dev
    restart: unless-stopped

volumes:
  postgres_dev_data:
  redis_dev_data: